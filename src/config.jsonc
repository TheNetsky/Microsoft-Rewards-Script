{
    // ============================================================
    // üåê GENERAL CONFIGURATION
    // ============================================================
    
    // Base URL for Microsoft Rewards dashboard (do not change unless necessary)
    "baseURL": "https://rewards.bing.com",
    
    // Directory to store sessions (cookies, browser fingerprints)
    "sessionPath": "sessions",
    
    // Dry-run mode: simulate execution without actually running tasks (useful for testing)
    "dryRun": false,
    
    
    // ============================================================
    // üñ•Ô∏è BROWSER CONFIGURATION
    // ============================================================
    
    "browser": {
        // false = visible window | true = headless mode (invisible)
        "headless": false,
        // Max timeout for operations (supports: 30000, "30s", "2min")
        "globalTimeout": "30s"
    },
    
    "fingerprinting": {
        // Persist browser fingerprints to improve consistency across runs
        "saveFingerprint": {
            "mobile": true,
            "desktop": true
        }
    },
    
    
    // ============================================================
    // ‚öôÔ∏è EXECUTION & PERFORMANCE
    // ============================================================
    
    "execution": {
        // true = Desktop + Mobile in parallel (faster, more resources)
        // false = Sequential (slower, fewer resources)
        "parallel": false,
        // If false, skip execution when 0 points are available
        "runOnZeroPoints": false,
        // Number of account clusters (processes) to run concurrently
        "clusters": 1,
        // How many times to run through all accounts in sequence (1 = process each account once, 2 = twice, etc.)
        // Higher values can catch missed tasks but increase detection risk
        "passesPerRun": 3
    },
    
    "schedule": {
        // Built-in scheduler (no cron needed in containers)
        "enabled": false,
        // Time format options:
        // - US style with AM/PM ‚Üí useAmPm: true and time12 (e.g., "9:00 AM")
        // - 24-hour style      ‚Üí useAmPm: false and time24 (e.g., "09:00")
        "useAmPm": false,
        "time12": "9:00 AM",
        "time24": "09:00",
        // IANA timezone (e.g., "Europe/Paris", "America/New_York" check schedule.md)
        "timeZone": "Europe/Paris",
        // If true, run immediately on process start
        "runImmediatelyOnStart": false
    },
    
    "jobState": {
        // Save state to avoid duplicate work across restarts
        "enabled": true,
        // Custom state directory (empty = defaults to sessionPath/job-state)
        "dir": ""
    },
    
    
    // ============================================================
    // üéØ TASKS & WORKERS
    // ============================================================
    
    "workers": {
        // Select which tasks the bot should complete on desktop/mobile
        "doDailySet": true,              // Daily set tasks
        "doMorePromotions": true,        // More promotions section
        "doPunchCards": true,            // Punch cards
        "doDesktopSearch": true,         // Desktop searches
        "doMobileSearch": true,          // Mobile searches
        "doDailyCheckIn": true,          // Daily check-in
        "doReadToEarn": true,            // Read to earn
        // If true, run desktop searches right after Daily Set
        "bundleDailySetWithSearch": true
    },
    
    
    // ============================================================
    // üîç SEARCH CONFIGURATION
    // ============================================================
    
    "search": {
        // Use locale-specific query sources
        "useLocalQueries": true,
        "settings": {
            // Use region-specific queries (at, fr, us, etc.)
            "useGeoLocaleQueries": true,
            // Randomly scroll search result pages (more natural behavior)
            "scrollRandomResults": true,
            // Occasionally click a result (safe targets only)
            "clickRandomResults": true,
            // Number of retries if mobile searches don't progress
            "retryMobileSearchAmount": 2,
            // Delay between searches
            "delay": {
                "min": "1min",
                "max": "5min"
            }
        }
    },
    
    "queryDiversity": {
        // Multi-source query generation: Reddit, News, Wikipedia instead of only Google Trends
        "enabled": true,
        // Available sources: google-trends, reddit, news, wikipedia, local-fallback
        "sources": ["google-trends", "reddit", "local-fallback"],
        // Max queries to fetch per source
        "maxQueriesPerSource": 10,
        // Cache duration in minutes (avoids hammering APIs)
        "cacheMinutes": 30
    },
    
    
    // ============================================================
    // ü§ñ HUMANIZATION & NATURAL BEHAVIOR
    // ============================================================
    
    "humanization": {
        // Human Mode: adds subtle micro-gestures & pauses to mimic real users
        "enabled": true,
        // If a ban is detected on any account, stop processing remaining accounts
        "stopOnBan": true,
        // Immediately send an alert (webhook/NTFY) when a ban is detected
        "immediateBanAlert": true,
        // Extra random pause between actions
        "actionDelay": { 
            "min": 500,      // 0.5 seconds minimum
            "max": 2200      // 2.2 seconds maximum
        },
        // Probability (0-1) to move mouse slightly between actions
        "gestureMoveProb": 0.65,
        // Probability (0-1) to perform a small scroll
        "gestureScrollProb": 0.4,
        // Optional execution time windows (e.g., ["08:30-11:00", "19:00-22:00"])
        // If specified, waits until inside a window before starting
        "allowedWindows": []
    },
    
    "vacation": {
        // Monthly "vacation" block: skip a random range of days each month
        // Each month, a random period between minDays and maxDays is selected
        // and all runs within that date range are skipped (more human-like behavior)
        "enabled": true,
        "minDays": 2,
        "maxDays": 4
    },
    
    
    // ============================================================
    // üõ°Ô∏è RISK MANAGEMENT & SECURITY
    // ============================================================
    
    "riskManagement": {
        // Dynamic delay adjustment based on detected risk signals
        "enabled": true,
        // Automatically increase delays when captchas/errors are detected
        "autoAdjustDelays": true,
        // Stop execution if risk level reaches critical threshold
        "stopOnCritical": false,
        // Enable ML-based ban prediction based on patterns
        "banPrediction": true,
        // Risk threshold (0-100). If exceeded, bot pauses or alerts you
        "riskThreshold": 75
    },
    
    "retryPolicy": {
        // Generic retry/backoff for transient failures
        "maxAttempts": 3,
        "baseDelay": 1000,
        "maxDelay": "30s",
        "multiplier": 2,
        "jitter": 0.2
    },
    
    
    // ============================================================
    // üåê PROXY
    // ============================================================
    
    "proxy": {
        // Control which outbound calls go through your proxy
        "proxyGoogleTrends": true,
        "proxyBingTerms": true
    },
    
    
    // ============================================================
    // üîî NOTIFICATIONS
    // ============================================================
    
    "notifications": {
        // Live logs webhook (Discord or similar). URL = your webhook endpoint
        "webhook": {
            "enabled": false,
            "url": "",
            // Optional: Customize webhook appearance
            "username": "Live Logs",
            "avatarUrl": "https://media.discordapp.net/attachments/1421163952972369931/1421929950377939125/Gc.png"
        },
        // Rich end-of-run summary webhook (Discord or similar)
        "conclusionWebhook": {
            "enabled": false,
            "url": "",
            // Optional: Customize webhook appearance (overrides webhook settings for conclusion messages)
            "username": "Microsoft Rewards",
            "avatarUrl": "https://media.discordapp.net/attachments/1421163952972369931/1421929950377939125/Gc.png"
        },
        // NTFY push notifications (plain text)
        "ntfy": {
            "enabled": false,
            "url": "",
            "topic": "rewards",
            "authToken": ""
        }
    },
    
    
    // ============================================================
    // üìä LOGGING & DIAGNOSTICS
    // ============================================================
    
    "logging": {
        // Logging controls (see docs/config.md)
        // Filter out noisy log buckets locally and for webhook summaries
        "excludeFunc": [
            "SEARCH-CLOSE-TABS",
            "LOGIN-NO-PROMPT",
            "FLOW"
        ],
        "webhookExcludeFunc": [
            "SEARCH-CLOSE-TABS",
            "LOGIN-NO-PROMPT",
            "FLOW"
        ],
        // Email redaction toggle (true = secure, false = full emails)
        "redactEmails": true
    },
    
    "diagnostics": {
        // Capture minimal evidence on failures (screenshots/HTML)
        "enabled": true,
        "saveScreenshot": true,
        "saveHtml": true,
        "maxPerRun": 2,
        "retentionDays": 7
    },
    
    "analytics": {
        // üìà Performance Dashboard: tracks points earned, success rates, execution times
        // Useful for monitoring your stats over time. Disable if you don't need it.
        // WHAT IT DOES:
        // - Collects daily/weekly/monthly statistics
        // - Calculates success rates for each activity type
        // - Tracks average execution times
        // - Generates trend reports
        // - Can export to Markdown or send via webhook
        "enabled": true,
        // How long to keep analytics data (days)
        "retentionDays": 30,
        // Generate markdown summary reports
        "exportMarkdown": true,
        // Send analytics summary via webhook
        "webhookSummary": true
    },
    
    
    // ============================================================
    // üõí BUY MODE
    // ============================================================
    
    "buyMode": {
        // Manual purchase/redeem mode. Use CLI -buy to enable
        // Session duration cap in minutes
        "maxMinutes": 45
    },
    
    
    // ============================================================
    // üîÑ UPDATES
    // ============================================================
    
    "update": {
        // Post-run auto-update settings
        "git": true,
        "docker": false,
        // Custom updater script path (relative to repo root)
        "scriptPath": "setup/update/update.mjs",
        
        // ‚ö†Ô∏è SMART UPDATE CONTROL - How It Really Works:
        //
        // BACKUP: Your files are ALWAYS backed up to .update-backup/ before any update
        //
        // UPDATE PROCESS:
        // 1. Script checks if remote modified config.jsonc or accounts.json
        // 2. Runs "git pull --rebase" to merge remote changes
        // 3. Git intelligently merges:
        //    ‚úÖ NEW FIELDS ADDED (new config options, new account properties)
        //       ‚Üí Your existing values are PRESERVED, new fields are added alongside
        //       ‚Üí This is 95% of updates - works perfectly without conflicts
        //    
        //    ‚ö†Ô∏è MAJOR RESTRUCTURING (fields renamed, sections reordered, format changed)
        //       ‚Üí Git may choose one version over the other
        //       ‚Üí Risk of losing your custom values in restructured sections
        //
        // WHAT THE OPTIONS DO:
        // - true: ACCEPT git merge result (keeps new features + your settings in most cases)
        // - false: REJECT remote changes, RESTORE your local file from backup (stay on old version)
        //
        // RECOMMENDED: Keep both TRUE
        // Why? Because we rarely restructure files. Most updates just ADD new optional fields.
        // Your passwords, emails, and custom settings survive addition-only updates.
        // Only risk: major file restructuring (rare, usually announced in release notes).
        //
        // SAFETY NET: Check .update-backup/ folder after updates to compare if worried.
        
        // Apply remote updates to config.jsonc via git merge
        // true = accept new features + intelligent merge (RECOMMENDED for most users)
        // false = always keep your local version (miss new config options)
        "autoUpdateConfig": true,
        
        // Apply remote updates to accounts.json via git merge
        // true = accept new fields (like "region", "totpSecret") while keeping credentials (RECOMMENDED)
        // false = always keep your local accounts file (safest but may miss new optional fields)
        "autoUpdateAccounts": true
    }
}

